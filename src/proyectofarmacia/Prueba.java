/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofarmacia;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import static proyectofarmacia.Programa.Escritorio;

/**
 *
 * @author Joel Arriola
 */
public class Prueba extends javax.swing.JFrame {

      Conexion conectar=new Conexion();
   Connection ConectarBD=conectar.getConection();
   ResultSet rs;
   PreparedStatement insertar;
   PreparedStatement Actualizar;
   Statement st;
    public Prueba() {
        initComponents();
          initComponents();
        CargarVentas(CodigoVentas);
        CargarCodigoProducto(CodigoProductosCon);
        VerDatallesdeVentas();
        AutoCompleteDecorator.decorate(CodigoProductosCon);
        AutoCompleteDecorator.decorate(CodigoVentas);
    }
public void cargar(){
    VerVentas ventas=new VerVentas();
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        CodigoProductosCon = new javax.swing.JComboBox<>();
        txtCostoTotal = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtPrecioCompra = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        CodigoVentas = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        MenuVerDatos = new javax.swing.JComboBox<>();
        MenuAgregar = new javax.swing.JComboBox<>();
        Imprimir = new javax.swing.JButton();
        MenuBuscar = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        txtExistencia = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VentasTB = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TotalTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(110, 207, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CodigoProductosCon.setBorder(javax.swing.BorderFactory.createTitledBorder("Codigo Producto"));
        CodigoProductosCon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CodigoProductosCon.setName(""); // NOI18N
        CodigoProductosCon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CodigoProductosConMouseClicked(evt);
            }
        });
        CodigoProductosCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoProductosConActionPerformed(evt);
            }
        });
        jPanel1.add(CodigoProductosCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 87, 140, 50));

        txtCostoTotal.setBorder(javax.swing.BorderFactory.createTitledBorder("Costo "));
        jPanel1.add(txtCostoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 215, 140, 57));

        txtCantidad.setBorder(javax.swing.BorderFactory.createTitledBorder("Cantidad"));
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 140, 57));

        txtPrecioCompra.setBorder(javax.swing.BorderFactory.createTitledBorder("Precio "));
        txtPrecioCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioCompraActionPerformed(evt);
            }
        });
        txtPrecioCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioCompraKeyTyped(evt);
            }
        });
        jPanel1.add(txtPrecioCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 83, 140, 57));

        txtID.setEditable(false);
        txtID.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Detalle Ventas"));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 6, 140, 57));

        CodigoVentas.setBorder(javax.swing.BorderFactory.createTitledBorder("Codigo Ventas"));
        CodigoVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CodigoVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CodigoVentasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CodigoVentasMousePressed(evt);
            }
        });
        CodigoVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoVentasActionPerformed(evt);
            }
        });
        jPanel1.add(CodigoVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 10, 140, 50));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar_1.png"))); // NOI18N
        jButton1.setText("REALIZAR VENTA");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, 190, 50));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DINERO.png"))); // NOI18N
        jButton3.setText("TOTAL A PAGAR");
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 250, 100));

        MenuVerDatos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuVerDatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSULTAR REGISTROS", "VER CLIENTES", "VER PRODUCTOS", "VER FECHA VENTAS", "VER DETALLE DE LAS VENTAS" }));
        MenuVerDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuVerDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuVerDatosMouseClicked(evt);
            }
        });
        MenuVerDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVerDatosActionPerformed(evt);
            }
        });
        jPanel1.add(MenuVerDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 220, 60));

        MenuAgregar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuAgregar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "REALIZAR NUEVO REGISTROS", "REGISTRAR CLIENTE", "REGISTRAR FECHA  DE VENTA", " ", " " }));
        MenuAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAgregarMouseClicked(evt);
            }
        });
        MenuAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(MenuAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 250, 60));

        Imprimir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Imprimir.setForeground(new java.awt.Color(0, 0, 0));
        Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IMPRIMIR.png"))); // NOI18N
        Imprimir.setText("IMPRIMIR FACTURA");
        Imprimir.setContentAreaFilled(false);
        Imprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });
        jPanel1.add(Imprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 220, 50));

        MenuBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BUSCAR REGISTRO", "PRODUCTOS", "FECHA VENTAS" }));
        MenuBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuBuscarMouseClicked(evt);
            }
        });
        MenuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(MenuBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 220, 60));

        jButton2.setText("BUSCAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        txtExistencia.setBorder(javax.swing.BorderFactory.createTitledBorder("Existencia"));
        txtExistencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaKeyTyped(evt);
            }
        });
        jPanel1.add(txtExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 140, 57));
        jPanel1.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 130, 40));

        jDesktopPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 290));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        VentasTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VentasTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VentasTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VentasTB);

        TotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TotalTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDesktopPane1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 890, 240));

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CodigoProductosConMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CodigoProductosConMouseClicked
        MostrarDatosProductosid();

    }//GEN-LAST:event_CodigoProductosConMouseClicked

    private void CodigoProductosConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoProductosConActionPerformed
CargarCodigoProducto(CodigoProductosCon);
    }//GEN-LAST:event_CodigoProductosConActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char valida=evt.getKeyChar();
        if(valida<'1'||valida>'9')evt.consume();
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtPrecioCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraActionPerformed

    private void txtPrecioCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraKeyTyped
        // TODO add your handling code here:
        char valida=evt.getKeyChar();
        if(valida<'0'||valida>'9')evt.consume();
    }//GEN-LAST:event_txtPrecioCompraKeyTyped

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyTyped

    private void CodigoVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CodigoVentasMouseClicked

        CargarVentas(CodigoVentas);

    }//GEN-LAST:event_CodigoVentasMouseClicked

    private void CodigoVentasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CodigoVentasMousePressed

    }//GEN-LAST:event_CodigoVentasMousePressed

    private void CodigoVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoVentasActionPerformed
  CargarVentas(CodigoVentas);        // TODO add your handling code here:
    }//GEN-LAST:event_CodigoVentasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InsertarVentaDetalle();
        Actualizar();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        VerDatallesdeVentasCodigo();
        VerTotalPagr();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void MenuVerDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuVerDatosMouseClicked

    }//GEN-LAST:event_MenuVerDatosMouseClicked

    private void MenuVerDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVerDatosActionPerformed
        if(MenuVerDatos.getSelectedItem().equals("VER PRODUCTOS")){
            MostrarDatosProductos();

        }if(MenuVerDatos.getSelectedItem().equals("VER CLIENTES")){
            VerDatosClientes();

        }if(MenuVerDatos.getSelectedItem().equals("VER FECHA VENTAS")){
            MostrarVentas();
        }if(MenuVerDatos.getSelectedItem().equals("VER DETALLE DE LAS VENTAS")){
            VerDatallesdeVentas();

        }
    }//GEN-LAST:event_MenuVerDatosActionPerformed

    private void MenuAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAgregarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuAgregarMouseClicked

    private void MenuAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAgregarActionPerformed
        if(MenuAgregar.getSelectedItem().equals("REGISTRAR CLIENTE")){
            Clientes cliente=new Clientes();
            cliente.setVisible(true);

        }if(MenuAgregar.getSelectedItem().equals("REGISTRAR FECHA  DE VENTA")){
            Venta venta=new Venta();
            venta.setVisible(true);
        }
    }//GEN-LAST:event_MenuAgregarActionPerformed

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
        Imprimir impresion=new Imprimir();
        impresion.setVisible(true);
    }//GEN-LAST:event_ImprimirActionPerformed

    private void MenuBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBuscarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuBuscarMouseClicked

    private void MenuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuBuscarActionPerformed
        if(MenuBuscar.getSelectedItem().equals("PRODUCTOS")){
            MostrarDatosProductosid();
        }if(MenuBuscar.getSelectedItem().equals("FECHA VENTAS")){
            MostrarVentasid();

        }
    }//GEN-LAST:event_MenuBuscarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String accion="Buscar";
        NuevoProducto producto=new NuevoProducto();
        Escritorio.add(producto);
        producto.show();
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtExistenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciaKeyTyped

    private void VentasTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentasTBMouseClicked
        if(MenuBuscar.getSelectedItem().equals("PRODUCTOS")){
            int fila=this.VentasTB.getSelectedRow();
            this.txtPrecioCompra.setText(this.VentasTB.getValueAt(fila, 5).toString());
            this.txtExistencia.setText(this.VentasTB.getValueAt(fila,6).toString());
            this.txtCostoTotal.setText(this.VentasTB.getValueAt(fila, 4).toString());
        }else{

        }
    }//GEN-LAST:event_VentasTBMouseClicked
public void JalarDatos(){
       int fila=this.VentasTB.getSelectedRow();
            this.txtPrecioCompra.setText(this.VentasTB.getValueAt(fila, 5).toString());
            this.txtExistencia.setText(this.VentasTB.getValueAt(fila,6).toString());
            this.txtCostoTotal.setText(this.VentasTB.getValueAt(fila, 4).toString());
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prueba().setVisible(true);
            }
        });
    }
public void InsertarVentaDetalle(){
    String Consulta="INSERT INTO DetalleVenta(idProductos,idVentas,precio,cantidad,costoTotal)values(?,?,?,?,?)";
    String CodigoVen=(String) CodigoVentas.getSelectedItem();
    String CodigoProd=(String) CodigoProductosCon.getSelectedItem();
  
    
        
    
    try {
        insertar=ConectarBD.prepareStatement(Consulta);
        insertar.setString(1,CodigoProd);
        insertar.setString(2, CodigoVen);
        insertar.setString(3, txtPrecioCompra.getText());
        insertar.setString(4, txtCantidad.getText());
        insertar.setString(5, txtCostoTotal.getText());
        insertar.executeUpdate();
       // JOptionPane.showMessageDialog(null,"Agregado correctamente" );
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"Error"+e.toString() );
    
    }
}
public void Actualizar(){
    
   
     int Cantidad=Integer.parseInt(txtCantidad.getText().toString());
   int Existencia=Integer.parseInt(txtExistencia.getText());
   if(Existencia>=Cantidad){
    
    String CodigoP=(String) CodigoProductosCon.getSelectedItem();
    
    int CodigoProductos=Integer.parseInt(CodigoP);
    
    System.out.println("El id es "+CodigoProductos);
   
    try {
        Actualizar=ConectarBD.prepareStatement("update Productos set Existencia=Existencia-'"+txtCantidad.getText()+"' where idProductos='"+CodigoProductos+"'");
    int Contador=Actualizar.executeUpdate();
    if(Contador>0){
       JOptionPane.showMessageDialog(null,"SE A REALIZADO LA VENTA");
      MostrarProductos();
        
    }else {
          JOptionPane.showMessageDialog(null,"No selecciono la fila");
    }
    
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"error"+e.toString());
    }
   } else{
       JOptionPane.showMessageDialog(null, "Lo sentimos la existencia es de "+txtExistencia.getText());
   }
}
 public void MostrarProductos(){
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca and p.idProductos='"+CodigoProductosCon.getSelectedItem()+"'";
        String Datos[]=new String[9];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Datos[8]=rs.getString(9);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }
 
 
 public void CargarVentas(JComboBox ventas){
     DefaultComboBoxModel ModeloVentas=new DefaultComboBoxModel();
     ventas.setModel(ModeloVentas);
     String Consulta="select idVentas from Ventas order by idVentas desc";
     try {
         st=ConectarBD.createStatement();
         rs=st.executeQuery(Consulta);
         while(rs.next()){
             ventas.addItem(rs.getString("idVentas"));
             
         }
     } catch (Exception e) {
     }
     
 }
    public void CargarCodigoProducto(JComboBox Codigo){
    DefaultComboBoxModel CodigModel=new DefaultComboBoxModel();
    Codigo.setModel(CodigModel);
    String consulta="select idProductos from Productos order by idProductos desc";
    try {
        st=ConectarBD.createStatement();
        rs=st.executeQuery(consulta);
        while(rs.next()){
            Codigo.addItem(rs.getString("idProductos"));
        }
    } catch (Exception e) {
    }
    
}
    
    // Metodos para ver los datos 
    public void VerDatosClientes(){
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("codigo Cliente");
        Modelo.addColumn("Nombre Cliente");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Tipo Pago");
        VentasTB.setModel(Modelo);
        String Dato[]=new String[5];
        String Consulta="select c.idClientes, c.Nombre,c.Nit,c.Telefono,fp.TipoPago\n" +
"from Clientes c, formaPago fp\n" +
"where c.idFormaPago=fp.idFormaPago order by idClientes desc ";
         try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
                Dato[0]=rs.getString(1);
                Dato[1]=rs.getString(2);
                Dato[2]=rs.getString(3);
                Dato[3]=rs.getString(4);
                Dato[4]=rs.getString(5);
                Modelo.addRow(Dato);
            }
        } catch (Exception e) {
            
        }
            
    }
    public void MostrarDatosProductos(){
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca order by p.idProductos";
        String Datos[]=new String[8];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }
 public void MostrarDatosProductosid(){
     String CodigoPro=(String)CodigoProductosCon.getSelectedItem();
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca and p.idProductos='"+CodigoPro+"'";
        String Datos[]=new String[8];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }

    public void VerDatallesdeVentas(){
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        VentasTB.setModel(Modelo);
        String Datos[]=new String[18];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio order by idDetalleVenta desc";
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
    public void agregarDatos(){
        
    }
      public void VerDatallesdeVentasCodigo(){
            String CodigoVen=(String) CodigoVentas.getSelectedItem();
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        VentasTB.setModel(Modelo);
        String Datos[]=new String[18];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio and v.idVentas='"+CodigoVen+"'";
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
public void VerTotalPagr(){
    DefaultTableModel Modelo=new DefaultTableModel();
    String Codigo=(String)CodigoVentas.getSelectedItem();
    Modelo.addColumn("Total a Pagar");
    TotalTable.setModel(Modelo);
    String Consulta="select sum(precio*cantidad)as TotalAPagar from DetalleVenta\n" +
"where idVentas='"+Codigo+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBD.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
}   

 public void MostrarVentas(){
      DefaultTableModel Modelo=new DefaultTableModel();
      Modelo.addColumn("Codigo Venta");
      Modelo.addColumn("Fecha venta");
      Modelo.addColumn("codigo Cliente");
      Modelo.addColumn("Cliente");
    VentasTB.setModel(Modelo);
    String Consulta="select v.idVentas,v.fecha,c.idClientes,c.Nombre\n" +
"from Ventas v, Clientes c\n" +
"where v.idClientes=c.idClientes order by v.idVentas desc";
    String Dato[]=new String[4];
    
      try {
          st=ConectarBD.createStatement();
          rs=st.executeQuery(Consulta);
          while(rs.next()){
              Dato[0]=rs.getString(1);
              Dato[1]=rs.getString(2);
              Dato[2]=rs.getString(3);
              Dato[3]=rs.getString(4);
              Modelo.addRow(Dato);
          }
      } catch (Exception e) {
      }
      
           
  }
  public void MostrarVentasid(){
      DefaultTableModel Modelo=new DefaultTableModel();
      String Codigo=(String)CodigoVentas.getSelectedItem();
      
      Modelo.addColumn("Codigo Venta");
      Modelo.addColumn("Fecha venta");
      Modelo.addColumn("codigo Cliente");
      Modelo.addColumn("Cliente");
    VentasTB.setModel(Modelo);
    String Consulta="select v.idVentas,v.fecha,c.idClientes,c.Nombre\n" +
"from Ventas v, Clientes c\n" +
"where v.idClientes=c.idClientes and v.idVentas='"+Codigo+"'";
    String Dato[]=new String[4];
    
      try {
          st=ConectarBD.createStatement();
          rs=st.executeQuery(Consulta);
          while(rs.next()){
              Dato[0]=rs.getString(1);
              Dato[1]=rs.getString(2);
              Dato[2]=rs.getString(3);
              Dato[3]=rs.getString(4);
              Modelo.addRow(Dato);
          }
      } catch (Exception e) {
      }
      
           
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CodigoProductosCon;
    private javax.swing.JComboBox<String> CodigoVentas;
    private javax.swing.JButton Imprimir;
    private javax.swing.JComboBox<String> MenuAgregar;
    private javax.swing.JComboBox<String> MenuBuscar;
    private javax.swing.JComboBox<String> MenuVerDatos;
    private javax.swing.JTable TotalTable;
    private javax.swing.JTable VentasTB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCostoTotal;
    private javax.swing.JTextField txtExistencia;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPrecioCompra;
    // End of variables declaration//GEN-END:variables
}
