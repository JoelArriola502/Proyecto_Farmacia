/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyectofarmacia;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import static proyectofarmacia.Programa.Escritorio;

/**
 *
 * @author Joel Arriola
 */
public class RealizarVentas extends javax.swing.JInternalFrame {

       Conexion conectar=new Conexion();
   Connection ConectarBD=conectar.getConection();
   ResultSet rs;
   PreparedStatement insertar;
   PreparedStatement Actualizar;
   Statement st;
   DefaultTableModel TBVentas=new DefaultTableModel();
   ArrayList<RealizarVentas> cargardatoslis=new ArrayList<>();
   
    public RealizarVentas() {
        initComponents();
          
 
       Modelo.addColumn("CodigoProducto");
        Modelo.addColumn("CodigoVentas");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        
        this.VentasTB.setModel(Modelo);
       
     
        txtFecha.setText(Fecha());
        txtFecha.setEnabled(false);
        String CodigoFactura=idVenta();
        int factura=Integer.parseInt(CodigoFactura);
        int resul=1+factura;
        String mostraCodigoFa=Integer.toString(resul);
        txtNumeroVenta.setText(mostraCodigoFa);
        txtNumeroVenta.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtNombreProducto = new javax.swing.JTextField();
        CodigoProductosCon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPrecioCompra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtExistencia = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        txtCantidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCostoTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        txtNumeroVenta = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VentasTB = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TotalTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(110, 207, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cliente");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 30));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Codigo Cliente");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 108, 30));
        jPanel4.add(txtNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 30, 210, 30));

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        jPanel4.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 110, 30));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 140));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });
        jPanel5.add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 210, 30));

        CodigoProductosCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CodigoProductosConKeyTyped(evt);
            }
        });
        jPanel5.add(CodigoProductosCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 110, 30));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Producto");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Codigo Producto");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 108, 30));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Precio");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, 30));

        txtPrecioCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioCompraActionPerformed(evt);
            }
        });
        txtPrecioCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioCompraKeyTyped(evt);
            }
        });
        jPanel5.add(txtPrecioCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 120, 30));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Existencia");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 70, 30));
        jPanel5.add(txtExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 70, 30));

        jButton7.setText("BUSCAR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 530, 210));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Cantidad");

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Costo");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 530, -1));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("FECHA");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 26, 138, 48));
        jPanel7.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 80, 180, 53));
        jPanel7.add(txtNumeroVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 180, 53));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("NUMERO ");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 138, 48));

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 300, 360));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("AGREGAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("LIMPIAR");

        jButton3.setText("ELIMINAR");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, 580, -1));

        jButton4.setText("AGREGAR");

        jButton5.setText("NUEVA VENTA");

        jButton6.setText("REALIZAR VENTA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 280, 320));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        VentasTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VentasTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VentasTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VentasTB);

        TotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TotalTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1161, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(513, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 271, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VentasTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentasTBMouseClicked
        /*        if(MenuBuscar.getSelectedItem().equals("PRODUCTOS")){
            int fila=this.VentasTB.getSelectedRow();
            this.txtPrecioCompra.setText(this.VentasTB.getValueAt(fila, 5).toString());
            this.txtExistencia.setText(this.VentasTB.getValueAt(fila,6).toString());
            this.txtCostoTotal.setText(this.VentasTB.getValueAt(fila, 4).toString());
        }else{

        }
        */
    }//GEN-LAST:event_VentasTBMouseClicked

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void txtPrecioCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        if(txtCantidad.getText().trim().isEmpty()||txtExistencia.getText().trim().isEmpty()||txtPrecioCompra.getText().trim().isEmpty()||CodigoProductosCon.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "POR FAVOR LLENE LOS CAMPOS");
            
        }else {
            int CantidadV=Integer.parseInt(txtCantidad.getText());
            int existenciap=Integer.parseInt(txtExistencia.getText());
            if(CantidadV>existenciap){
                JOptionPane.showMessageDialog(null,"No Contamos con la cantidad que pide");
            } else {
                
            
        llamar();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
        ActualizarExistencia();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtPrecioCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraKeyTyped
       char v=evt.getKeyChar();
       if((v<'0'||v>'9')&&(v<'.'||v>'.'))evt.consume();
    }//GEN-LAST:event_txtPrecioCompraKeyTyped

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char c=evt.getKeyChar();
        if(c<'0'||c>'9')evt.consume();
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void CodigoProductosConKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodigoProductosConKeyTyped
       char c=evt.getKeyChar();
        if(c<'0'||c>'9')evt.consume();
    }//GEN-LAST:event_CodigoProductosConKeyTyped

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //ProductosNew pro=new ProductosNew();
        VerVentas pro=new VerVentas();
        pro.toFront();
        pro.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed
public void InsertarVentaDetalle(){
    String Consulta="INSERT INTO DetalleVenta(idProductos,idVentas,precio,cantidad,costoTotal)values(?,?,?,?,?)";
   
  
    
        
    
    try {
        insertar=ConectarBD.prepareStatement(Consulta);
        insertar.setString(1,CodigoProductosCon.getText());
        insertar.setString(2, txtNumeroVenta.getText());
        insertar.setString(3, txtPrecioCompra.getText());
        insertar.setString(4, txtCantidad.getText());
        insertar.setString(5, txtCostoTotal.getText());
        insertar.executeUpdate();
       // JOptionPane.showMessageDialog(null,"Agregado correctamente" );
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"Error"+e.toString() );
    
    }
}
public void Actualizar(){
    
   
     int Cantidad=Integer.parseInt(txtCantidad.getText().toString());
   int Existencia=Integer.parseInt(txtExistencia.getText());
   if(Existencia>=Cantidad){
    
   
    
    int CodigoProductos=Integer.parseInt(CodigoProductosCon.getText());
    
    System.out.println("El id es "+CodigoProductos);
   
    try {
        Actualizar=ConectarBD.prepareStatement("update Productos set Existencia=Existencia-'"+txtCantidad.getText()+"' where idProductos='"+CodigoProductos+"'");
    int Contador=Actualizar.executeUpdate();
    if(Contador>0){
       JOptionPane.showMessageDialog(null,"SE A REALIZADO LA VENTA");
      MostrarProductos();
        
    }else {
          JOptionPane.showMessageDialog(null,"No selecciono la fila");
    }
    
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"error"+e.toString());
    }
   } else{
       JOptionPane.showMessageDialog(null, "Lo sentimos la existencia es de "+txtExistencia.getText());
   }
}
 public void MostrarProductos(){
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca and p.idProductos='"+CodigoProductosCon.getText()+"'";
        String Datos[]=new String[9];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Datos[8]=rs.getString(9);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }
 
 
 public void CargarVentas(JComboBox ventas){
     DefaultComboBoxModel ModeloVentas=new DefaultComboBoxModel();
     ventas.setModel(ModeloVentas);
     String Consulta="select idVentas from Ventas order by idVentas desc";
     try {
         st=ConectarBD.createStatement();
         rs=st.executeQuery(Consulta);
         while(rs.next()){
             ventas.addItem(rs.getString("idVentas"));
             
         }
     } catch (Exception e) {
     }
     
 }
    public void CargarCodigoProducto(JComboBox Codigo){
    DefaultComboBoxModel CodigModel=new DefaultComboBoxModel();
    Codigo.setModel(CodigModel);
    String consulta="select idProductos from Productos order by idProductos desc";
    try {
        st=ConectarBD.createStatement();
        rs=st.executeQuery(consulta);
        while(rs.next()){
            Codigo.addItem(rs.getString("idProductos"));
        }
    } catch (Exception e) {
    }
    
}
    
    // Metodos para ver los datos 
    public void VerDatosClientes(){
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("codigo Cliente");
        Modelo.addColumn("Nombre Cliente");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Tipo Pago");
        VentasTB.setModel(Modelo);
        String Dato[]=new String[5];
        String Consulta="select c.idClientes, c.Nombre,c.Nit,c.Telefono,fp.TipoPago\n" +
"from Clientes c, formaPago fp\n" +
"where c.idFormaPago=fp.idFormaPago order by idClientes desc ";
         try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
                Dato[0]=rs.getString(1);
                Dato[1]=rs.getString(2);
                Dato[2]=rs.getString(3);
                Dato[3]=rs.getString(4);
                Dato[4]=rs.getString(5);
                Modelo.addRow(Dato);
            }
        } catch (Exception e) {
            
        }
            
    }
    public void MostrarDatosProductos(){
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca order by p.idProductos";
        String Datos[]=new String[8];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }
 public void MostrarDatosProductosid(){
     
        DefaultTableModel Modelo=new  DefaultTableModel();
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre Producto");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Precio");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Marca");
        VentasTB.setModel(Modelo);
        String consulta=" select p.idProductos, p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,l.Nombre,m.NombreMarca\n" +
"from Productos p, Marca m, Laboratorio l\n" +
"where p.idLaboratorio=l.idLaboratorio and p.idMarca=m.idMarca and p.idProductos='"+CodigoProductosCon.getText()+"'";
        String Datos[]=new String[8];
        
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(consulta);
            while(rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                Datos[3]=rs.getString(4);
                Datos[4]=rs.getString(5);
                Datos[5]=rs.getString(6);
                Datos[6]=rs.getString(7);
                Datos[7]=rs.getString(8);
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
        }
        
    }

    public void VerDatallesdeVentas(){
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        VentasTB.setModel(Modelo);
        String Datos[]=new String[18];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio order by idDetalleVenta desc";
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
    public void agregarDatos(){
        
    }
      public void VerDatallesdeVentasCodigo(){
            
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        VentasTB.setModel(Modelo);
        String Datos[]=new String[18];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio and v.idVentas='"+txtNumeroVenta.getText()+"'";
        try {
            st=ConectarBD.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
public void VerTotalPagr(){
    DefaultTableModel Modelo=new DefaultTableModel();
    
    Modelo.addColumn("Total a Pagar");
    TotalTable.setModel(Modelo);
    String Consulta="select sum(precio*cantidad)as TotalAPagar from DetalleVenta\n" +
"where idVentas='"+txtNumeroVenta.getText()+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBD.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
}   

 public void MostrarVentas(){
      DefaultTableModel Modelo=new DefaultTableModel();
      Modelo.addColumn("Codigo Venta");
      Modelo.addColumn("Fecha venta");
      Modelo.addColumn("codigo Cliente");
      Modelo.addColumn("Cliente");
    VentasTB.setModel(Modelo);
    String Consulta="select v.idVentas,v.fecha,c.idClientes,c.Nombre\n" +
"from Ventas v, Clientes c\n" +
"where v.idClientes=c.idClientes order by v.idVentas desc";
    String Dato[]=new String[4];
    
      try {
          st=ConectarBD.createStatement();
          rs=st.executeQuery(Consulta);
          while(rs.next()){
              Dato[0]=rs.getString(1);
              Dato[1]=rs.getString(2);
              Dato[2]=rs.getString(3);
              Dato[3]=rs.getString(4);
              Modelo.addRow(Dato);
          }
      } catch (Exception e) {
      }
      
           
  }
  public void MostrarVentasid(){
      DefaultTableModel Modelo=new DefaultTableModel();
      
      
      Modelo.addColumn("Codigo Venta");
      Modelo.addColumn("Fecha venta");
      Modelo.addColumn("codigo Cliente");
      Modelo.addColumn("Cliente");
    VentasTB.setModel(Modelo);
    String Consulta="select v.idVentas,v.fecha,c.idClientes,c.Nombre\n" +
"from Ventas v, Clientes c\n" +
"where v.idClientes=c.idClientes and v.idVentas='"+txtNumeroVenta.getText()+"'";
    String Dato[]=new String[4];
    
      try {
          st=ConectarBD.createStatement();
          rs=st.executeQuery(Consulta);
          while(rs.next()){
              Dato[0]=rs.getString(1);
              Dato[1]=rs.getString(2);
              Dato[2]=rs.getString(3);
              Dato[3]=rs.getString(4);
              Modelo.addRow(Dato);
          }
      } catch (Exception e) {
      }
      
           
  }

public void agregarProducto(){
    int cantidad,Existencia;
    if(txtCantidad.getText().trim().isEmpty()||txtPrecioCompra.getText().trim().isEmpty()){
        JOptionPane.showMessageDialog(null, "AGREGE LOS DATOS ");
    } else {
         if (!txtCantidad.getText().equals("")) {
            if (txtCantidad.getText().equals("")) {
                txtCantidad.setText("0");
               cantidad = Integer.parseInt(txtCantidad.getText());
            }else {
                cantidad = Integer.parseInt(txtCantidad.getText());
            }
            if(cantidad>0){
                Existencia=Integer.parseInt(txtExistencia.getText());
                cantidad=Integer.parseInt(txtCantidad.getText());
                if(cantidad<=Existencia){
                    
                    int id=Integer.parseInt(CodigoProductosCon.getText());
                     String d2 = txtPrecioCompra.getText();
                    String d3 = txtCantidad.getText();
                    String d4 = txtCostoTotal.getText();
                    String d5 = txtNumeroVenta.getText();
                    agregardatosrecorrer(id, d2, d3, d4, d5);
                    
                } else {
                    JOptionPane.showMessageDialog(null, "LA EXISTENCIA ES INSUFICIENTE");
                    txtCantidad.setText("");
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese Cantidad mayor a 0");
                txtCantidad.setText("");
                
                txtCantidad.requestFocus();
    }
} else {
            JOptionPane.showMessageDialog(null, "Ingrese cantidad");
            txtCantidad.requestFocus();
         }
}
}
   void agregardatosrecorrer(int id, String Precio, String cantidad, String Costo, String venta) {

        int p = recorrer(id);
        double n_cant, n_total;
        if (p > -1) {
     int cant=Integer.parseInt(cantidad);
            n_cant = Double.parseDouble(String.valueOf(VentasTB.getModel().getValueAt(p, 5))) + cant;
            VentasTB.setValueAt(n_cant, p, 5);

            n_total = Double.parseDouble(String.valueOf(VentasTB.getModel().getValueAt(p, 5))) * Double.parseDouble(String.valueOf(VentasTB.getModel().getValueAt(p, 6)));
            VentasTB.setValueAt(n_total, p, 7);

        } else {
            String Datos[] = {String.valueOf(id), Precio, cantidad, Costo, String.valueOf(cantidad)};
            TBVentas.addRow(Datos);
        }
        VentasTB.setModel(TBVentas);
    }

public int recorrer(int id) {
        int fila = 0, valor = -1;

        fila = VentasTB.getRowCount();

        for (int f = 0; f < fila; f++) {
            if (Integer.parseInt(String.valueOf(TBVentas.getValueAt(f, 0))) == id) {

                valor = f;
                break;

            } else {
                valor = -1;
            }

        }
        return valor;
    }


   

 DefaultTableModel Modelo=new DefaultTableModel();
public void llamar(){
    String idVenta=idVenta();
    int codiV=Integer.parseInt(idVenta);
    int resul=1+codiV;
    String idVentaC=Integer.toString(resul);
    String cargar[]= new String[5];
  
    
    cargar[0]=CodigoProductosCon.getText();
    cargar[1]=txtNumeroVenta.getText();
    cargar[2]=txtPrecioCompra.getText();
    cargar[3]=txtCantidad.getText();
    cargar[4]=txtCostoTotal.getText();
    Modelo.addRow(cargar);
    
    
    
    
    
}

public void eliminar(){
    int fila=VentasTB.getSelectedRow();
    if(fila>=0){
        Modelo.removeRow(fila);
        
    }else {
        JOptionPane.showMessageDialog(null, "Seleccione la fila");
    }
}

public void EliminarDatos(){
    int fila=VentasTB.getRowCount();
    for(int i=fila-1; i>=0; i--){
        Modelo.removeRow(i);
    }
}
public void modificar(){
    
}


  public String Fecha(){
      Date Fecha=new Date();
      SimpleDateFormat FechaBD= new SimpleDateFormat("yyy-MM-dd");
      return FechaBD.format(Fecha);
      
  }
  public String idVenta(){
       String id=null;
       
       try {
           String consulta="select MAX(idVentas)as Ventas from Ventas";
           Actualizar=ConectarBD.prepareStatement(consulta);
           rs=Actualizar.executeQuery();
           if(rs.next()){
               String idCodigo=rs.getString("Ventas");
               id=(idCodigo);
               
            
           
           }
       } catch (Exception e) {
           System.out.println("Error "+e.toString());
       }
      return id;
      
   }
  
  public void RealizarVentasss(){
      try {
          for(int i=0;i<VentasTB.getRowCount();i++){
              insertar=ConectarBD.prepareStatement("INSERT INTO DetalleVenta(idProductos,idVentas,precio,cantidad,costoTotal)values(?,?,?,?,?)");
              insertar.setString(1, VentasTB.getValueAt(i, 0).toString());
              insertar.setString(2, VentasTB.getValueAt(i, 1).toString());
              insertar.setString(3, VentasTB.getValueAt(i, 2).toString());
              insertar.setString(4, VentasTB.getValueAt(i, 3).toString());
              insertar.setString(5, VentasTB.getValueAt(i, 4).toString());
              insertar.executeUpdate();
              
          }
          JOptionPane.showMessageDialog(null, "COMPRA REALIZADA CON EXITO");
      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Error"+e.toString());
      }
  }
  public void ActualizarExistencia(){
   int Cantidad=Integer.parseInt(txtCantidad.getText().toString());
   int Existencia=Integer.parseInt(txtExistencia.getText());
   if(Existencia>=Cantidad){
   
    try {
         for(int i=0;i<VentasTB.getRowCount();i++){
              Actualizar=ConectarBD.prepareStatement("update Productos set Existencia=Existencia-'"+VentasTB.getValueAt(i, 3)+"' where idProductos='"+VentasTB.getValueAt(i, 0)+"'");
              
              Actualizar.executeUpdate();    
         }
        
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"error"+e.toString());
    }
   } else{
       JOptionPane.showMessageDialog(null, "Lo sentimos la existencia es de "+txtExistencia.getText());
   }
}
   public void InsertarVentas(){
   
     String sql="INSERT INTO Ventas(Fecha,idClientes)values(?,?)";
     
    try {
        insertar=ConectarBD.prepareStatement(sql);
        insertar.setString(1, txtFecha.getText());
        insertar.setString(2,txtID.getText());
        insertar.executeUpdate();
       
        
    JOptionPane.showMessageDialog(null,"Agregados Correcto ventas" );
       
    } catch (Exception e) {
         JOptionPane.showMessageDialog(null,"error"+e.toString() );
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField CodigoProductosCon;
    private javax.swing.JTable TotalTable;
    private javax.swing.JTable VentasTB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCostoTotal;
    public static javax.swing.JTextField txtExistencia;
    private javax.swing.JTextField txtFecha;
    public static javax.swing.JTextField txtID;
    public static javax.swing.JTextField txtNombreCliente;
    public static javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtNumeroVenta;
    public static javax.swing.JTextField txtPrecioCompra;
    // End of variables declaration//GEN-END:variables
}
